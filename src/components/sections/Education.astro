---
import i18next, { t } from "i18next";

import Heading from "../ui/Heading.astro";
import { education } from "@/data/education";

// sort education by date descending, put degrees first

education.sort((a, b) => {
  if (a.date instanceof Date && b.date instanceof Date) {
    return b.date.getTime() - a.date.getTime();
  } else if (a.date instanceof Date) {
    return -1;
  } else if (b.date instanceof Date) {
    return 1;
  } else {
    return 0;
  }
});

const degrees = education.filter((item) => "degree_" + i18next.language in item);
const nonDegrees = education.filter((item) => !("degree_" + i18next.language in item));

const educationSorted = [...degrees, ...nonDegrees];
---

<Heading level={2}>{t("sections.education.title")}</Heading>

{
  educationSorted.map((item) => (
    <div class="mb-4">
      <div class="flex items-center">
        <div class="flex-1">
          <div class="text-lg font-semibold">{item.name}</div>
          <div class="text-sm">
            {"issuer" in item
              ? item.issuer
              : `${item["degree_" + i18next.language]}, ${item["area_" + i18next.language]}`}
          </div>
        </div>
        <div class="text-sm text-gray-500">
          {item.date instanceof Date
            ? item.date.toLocaleString(i18next.language, { month: "long", year: "numeric" })
            : item.date.start.toLocaleString(i18next.language, { month: "long", year: "numeric" }) +
              " - " +
              (item.date.end?.toLocaleString(i18next.language, { month: "long", year: "numeric" }) ??
                t("sections.education.present"))}
        </div>
      </div>
    </div>
  ))
}
